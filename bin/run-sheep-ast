#!/usr/bin/env ruby
# frozen_string_literal: true

require 'bundler/setup'
require 'sheep_ast'
require 'benchmark'

module SheepAst
  # TBD
  class Run
    include SheepAst::Option

    # rubocop:disable all
    def run
      prog = __FILE__.to_s.split('/').last

      optparse = option_on
      argv = ARGV.dup

      option = option_parse(argv)

      current_dir = Dir.pwd

      puts "#{prog}> Executing on"
      puts "#{prog}>   version: #{SheepAst::VERSION}"
      puts "#{prog}>   ruby version: #{ruby_version}"
      puts "#{prog}>   current dir: #{current_dir}"
      puts "#{prog}>   argv: #{argv.inspect}"

      exit_status = false
      time = nil

      core = SheepAst::AnalyzerCore.new

      do_configure(core, option, optparse)
      time = Benchmark.measure {
        puts "#{prog}> Do analyze"
        exit_status = core.report(raise: false) {
          core.analyze_file(argv)
        }
      }

      puts "#{prog}> Time to process : #{time.real}" unless time.nil?

      begin
        puts "#{prog}> Successfully processed. Call result handler."
        core.handle_result
      rescue NameError => e
        puts 'handle_result is not loaded'
        p e
        puts e.backtrace
      rescue => e
        puts 'Unknown ERROR abort'
        p e
        puts e.backtrace
      end

      puts "#{prog}> Finish. Thank you."
      exit(exit_status)
    end
  end
end

if __FILE__ == $PROGRAM_NAME
  prog = SheepAst::Run.new
  prog.run
end
